# ** EXAM OBJECTIVE: QUERIES **
# GOAL: Use scroll API, search templates, script queries
# REQUIRED SETUP: 
# (i)  a running Elasticsearch cluster with at least one node and a 
#      Kibana instance,
# (ii) add the "Sample web logs" and "Sample flight data" to Kibana


# Search for all documents in all indices
# As above, but use the scroll API to return the first 100 results 
#    while keeping the search context alive for 2 minutes
# Use the scroll id included in the response to the previous query 
#    and retrieve the next batch of results

POST /*/_search?scroll=2m
{
    "size": 100,
    "query": {
        "match_all" : {
        }
    }
}

POST /_search/scroll 
{
    "scroll" : "2m", 
    "scroll_id" : "DnF1ZXJ5VGhlbkZldGNoCAAAAAAAAAR8FnF5c082aFJSVExHeS1LcG1qbG0zYncAAAAAAAAEfRZxeXNPNmhSUlRMR3ktS3BtamxtM2J3AAAAAAAAHF8WOVlRWmZ2QjVTMHVjS0pLM0JuX1I5QQAAAAAAAASAFnF5c082aFJSVExHeS1LcG1qbG0zYncAAAAAAAAEfxZxeXNPNmhSUlRMR3ktS3BtamxtM2J3AAAAAAAAHGAWOVlRWmZ2QjVTMHVjS0pLM0JuX1I5QQAAAAAAAAR-FnF5c082aFJSVExHeS1LcG1qbG0zYncAAAAAAAAcYRY5WVFaZnZCNVMwdWNLSkszQm5fUjlB" 
}

### Run the next queries on the `kibana_sample_data_logs` index
# Filter documents with the `response` field greater or equal to 400

POST kibana_sample_data_logs/_search
{
  "query": {
    "bool": {
      "filter": {
       "range": {
         "response": {
           "gte": 400
         }
       }
      }
    }
  }
}


# Create a search template for the above query, so that the template 
#   (i) is named "with_response_and_tag", (ii) has a parameter 
#   "with_min_response" to represent the lower bound of the 
#   `response` field, (iii) has a parameter "with_max_response" to 
#   represent the upper bound of the `response` field, (iv) has a 
#   parameter "with_tag" to represent a possible value of the `tags` 
#   field
# Test the "with_response_and_tag" search template by setting the 
#   parameters as follows: (i) "with_min_response": 400, (ii) 
#   "with_max_response": 500 (iii) "with_tag": "security"


POST kibana_sample_data_logs/_scripts/with_response_and_tag

POST _scripts/with_response_and_tag
{
  "script": {
    "lang": "mustache",
    "source": {
      "query": {
        "bool": {
          "filter": [
            {
              "range": {
                "response": {
                  "gte": "{{with_min_response}}",
                  "lte": "{{with_max_response}}"
                }
              }
            },
            {
              "match": {
                "tags": "{{with_tag}}"
              }
            }
          ]
        }
      }
    }
  }
}

GET kibana_sample_data_logs/_search/template
{
    "id": "with_response_and_tag",
    "params": {
    "with_min_response": "400",
    "with_max_response": "500",
    "with_tag": "security"
  }
}

GET kibana_sample_data_logs/_search
{
  "query": {
    "bool": {
      "filter": [
        {
          "range": {
            "response": {
              "gte": "400",
              "lte": "500"
            }
          }
        },
        {
          "match": {
            "tags": "security"
          }
        }
      ]
    }
  }
}


GET _render/template
{
  "id": "with_response_and_tag",
  "params": {
    "with_min_response": "400"
  }
}

# Update the "with_response_and_tag" search template, so that (i) if 
#   the "with_max_response" parameter is not set, then don't set an #   upper bound to the `response` value, and (ii) if the "with_tag" 
#   parameter is not set, then do not apply that filter at all
# Test the "with_response_and_tag" search template by setting only 
#   the "with_min_response" parameter to 500



#good_caution:注意标点符号的使用，否则会报错
POST _scripts/with_response_and_tag
{
  "script": {
    "lang": "mustache",
    "source": "{\"query\": {\"bool\": {\"filter\": [{\"range\": {\"response\": {\"gte\": \"{{with_min_response}}\"{{#end}},{{/end}}{{#with_max_response}} \"lte\": \"{{with_max_response}}\"{{/with_max_response}} }}},{ {{#with_tag}}\"match\": {  \"tags\": \"{{with_tag}}\"}{{/with_tag}}}] }}}"
  }
}





# Test the "with_response_and_tag" search template by setting the 
#   parameters as follows: (i) "with_min_response": 500, (ii) 
#   "with_tag": "security"

PUT _scripts/with_response_and_tag
{
  "script": {
    "lang": "mustache",
    "source": """
      {
        "query": {
            "bool": {
              "filter": [
                {
                  "range": {
                    "response": {
                      "gte": "{{with_min_response}}"
                      {{#with_max_response}}
                      ,"lte": "{{with_max_response}}"
                      {{/with_max_response}}
                    }
                  }
                }
                {{#with_tag}}
                ,{
                  "match": {
                    "tags":"{{with_tag}}"}  
                }
                {{/with_tag}}
            ]
          }
        }
      }
    """
  }
}





GET _render/template
{
  "id": "with_response_and_tag",
  "params": {
    "with_min_response": "500",
    "with_tag": "security"
  }
}

  
